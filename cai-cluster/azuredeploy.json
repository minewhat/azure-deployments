{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username used when provisioning virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password used when provisioning virtual machines"
      }
    },
    "gitCredentials": {
      "type": "securestring",
      "metadata": {
        "description": "Git credentials to download git repos"
      }
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "ResourceGroup",
        "West US",
        "East US",
        "East US 2",
        "Central US",
        "South Central US",
        "North Central US",
        "East Asia",
        "Southeast Asia",
        "West Europe",
        "North Europe"
      ],
      "defaultValue": "ResourceGroup",
      "metadata": {
        "description": "Location where resources will be provisioned.  A value of 'ResourceGroup' will deploy the resource to the same location of the resource group the resources are provisioned into"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "verticanet",
      "metadata": {
        "description": "Virtual Network"
      }
    },
    "OS": {
      "type": "string",
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu"
      ],
      "metadata": {
        "description": "The operating system to deploy Crawler cluster on"
      }
    },
    "vmSizeMongoNodes": {
      "type": "string",
      "defaultValue": "Standard_DS3",
      "allowedValues": [
        "Standard_DS3",
        "Standard_DS4"
      ],
      "metadata": {
        "description": "Size of the Mongo nodes"
      }
    },
    "vmSizeCassaNodes": {
      "type": "string",
      "defaultValue": "Standard_DS3",
      "allowedValues": [
        "Standard_DS3",
        "Standard_DS4"
      ],
      "metadata": {
        "description": "Size of the Mongo nodes"
      }
    },
    "vmSizeCruncherNodes": {
      "type": "string",
      "defaultValue": "Standard_DS3",
      "allowedValues": [
        "Standard_DS3",
        "Standard_DS4"
      ],
      "metadata": {
        "description": "Size of the Mongo nodes"
      }
    },
    "vmSizeAerospikeNodes": {
      "type": "string",
      "defaultValue": "Standard_DS4",
      "allowedValues": [
        "Standard_DS3",
        "Standard_DS4"
      ],
      "metadata": {
        "description": "Size of the Mongo nodes"
      }
    },
    "vmSizeWorkerNodes": {
      "type": "string",
      "defaultValue": "Standard_DS4",
      "allowedValues": [
        "Standard_DS3",
        "Standard_DS4"
      ],
      "metadata": {
        "description": "Size of the Mongo nodes"
      }
    }
  },
  "variables": {
    "es_ip": "10.1.100.136",
    "aerospike_ip": "10.1.100.64",
    "mongo_ip": "10.1.100.65",
    "worker_ip": "10.1.100.66",
    "cassa_ip": "10.1.100.67",
    "cruncher_ip": "10.1.100.68",
    "templateBaseUrl": "https://raw.githubusercontent.com/minewhat/azure-deployments/master/cai-cluster/",
    "locationMap": {
        "ResourceGroup":"[resourceGroup().location]",
        "West US":"[parameters('location')]",
        "East US":"[parameters('location')]",
        "East US 2":"[parameters('location')]",
        "Central US":"[parameters('location')]",
        "South Central US":"[parameters('location')]",
        "North Central US":"[parameters('location')]",
        "East Asia":"[parameters('location')]",
        "Southeast Asia":"[parameters('location')]",
        "West Europe":"[parameters('location')]",
        "North Europe":"[parameters('location')]"
    },
    "location":"[variables('locationMap')[parameters('location')]]",
    "storageAccountPrefix": "cai",
    "storageAccountNameShared": "[concat(variables('storageAccountPrefix'), 's', uniqueString(resourceGroup().id, deployment().name))]",
    "sharedTemplateUrl": "[concat(variables('templateBaseUrl'), 'shared-resources.json')]",
    "machineTemplateUrl": "[concat(variables('templateBaseUrl'), 'cai-machine-resources.json')]",
    "ubuntuSettings": {
      "imageReference":{
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "14.04.2-LTS",
        "version": "latest"
      },
      "managementPort":"22",
      "extensionSettings":{
        "cai-mongo": {
          "publisher": "Microsoft.OSTCExtensions",
          "type": "CustomScriptForLinux",
          "typeHandlerVersion": "1.2",
          "settings": {
            "fileUris": [
              "https://raw.githubusercontent.com/minewhat/azure-deployments/master/cai-cluster/mongo-install-ubuntu.sh"
            ],
            "commandToExecute": "[concat('bash mongo-install-ubuntu.sh ', parameters('gitCredentials'), ' ', variables('mongo_ip'), ' ', variables('es_ip'), ' ', variables('aerospike_ip'), ' ', variables('cassa_ip'), ' ', variables('cruncher_ip'), ' ', variables('worker_ip'))]"
          }
        },
        "cai-aerospike": {
            "publisher": "Microsoft.OSTCExtensions",
            "type": "CustomScriptForLinux",
            "typeHandlerVersion": "1.2",
            "settings": {
              "fileUris": [
                "https://raw.githubusercontent.com/minewhat/azure-deployments/master/cai-cluster/aerospike-install-ubuntu.sh"
              ],
              "commandToExecute": "[concat('bash aerospike-install-ubuntu.sh ', parameters('gitCredentials'), ' ', variables('mongo_ip'), ' ', variables('es_ip'), ' ', variables('aerospike_ip'), ' ', variables('cassa_ip'), ' ', variables('cruncher_ip'), ' ', variables('worker_ip'))]"
            }
          },
        "cai-worker": {
          "publisher": "Microsoft.OSTCExtensions",
          "type": "CustomScriptForLinux",
          "typeHandlerVersion": "1.2",
          "settings": {
            "fileUris": [
              "https://raw.githubusercontent.com/minewhat/azure-deployments/master/cai-cluster/worker-install-ubuntu.sh"
            ],
            "commandToExecute": "[concat('bash worker-install-ubuntu.sh ', parameters('gitCredentials'), ' ', variables('mongo_ip'), ' ', variables('es_ip'), ' ', variables('aerospike_ip'), ' ', variables('cassa_ip'), ' ', variables('cruncher_ip'), ' ', variables('worker_ip'))]"
          }
        },
        "cai-cassa": {
          "publisher": "Microsoft.OSTCExtensions",
          "type": "CustomScriptForLinux",
          "typeHandlerVersion": "1.2",
          "settings": {
            "fileUris": [
              "https://raw.githubusercontent.com/minewhat/azure-deployments/master/cai-cluster/cassa-install-ubuntu.sh"
            ],
            "commandToExecute": "[concat('bash cassa-install-ubuntu.sh ', parameters('gitCredentials'), ' ', variables('mongo_ip'), ' ', variables('es_ip'), ' ', variables('aerospike_ip'), ' ', variables('cassa_ip'), ' ', variables('cruncher_ip'), ' ', variables('worker_ip'))]"
          }
        },
        "cai-cruncher": {
          "publisher": "Microsoft.OSTCExtensions",
          "type": "CustomScriptForLinux",
          "typeHandlerVersion": "1.2",
          "settings": {
            "fileUris": [
              "https://raw.githubusercontent.com/minewhat/azure-deployments/master/cai-cluster/cruncher-install-ubuntu.sh"
            ],
            "commandToExecute": "[concat('bash cruncher-install-ubuntu.sh ', parameters('gitCredentials'), ' ', variables('mongo_ip'), ' ', variables('es_ip'), ' ', variables('aerospike_ip'), ' ', variables('cassa_ip'), ' ', variables('cruncher_ip'), ' ', variables('worker_ip'))]"
          }
        }
      }
    },
    "osSettings": "[variables('ubuntuSettings')]",
    "networkSettings": {
      "virtualNetworkName": "[parameters('virtualNetworkName')]",
      "addressPrefix": "10.1.100.0/24",
      "subnet": {
        "master": {
          "name": "master",
          "prefix": "10.1.100.0/25",
          "vnet": "[parameters('virtualNetworkName')]"
        }
      }
    },
    "dataSkuSettings": {
      "Standard_DS3": {
        "dataDisks":4,
        "nodesPerStorageAccount":4,
        "storageAccountType":"Premium_LRS"
      },
      "Standard_DS4": {
        "dataDisks":4,
        "nodesPerStorageAccount":2,
        "storageAccountType":"Premium_LRS"
      }
    },
    "nodesPerStorageAccount":"[variables('dataSkuSettings')[parameters('vmSizeCassaNodes')].nodesPerStorageAccount]",
    "storageBinPackMap": [
      "[div(sub(add(1, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(2, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(3, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(4, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(5, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(6, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(7, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(8, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(9, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(10, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(11, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(12, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(13, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(14, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(15, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(16, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(17, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(18, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(19, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(20, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(21, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(22, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(23, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(24, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(25, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(26, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(27, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(28, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(29, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(30, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(31, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(32, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(33, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(34, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(35, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(36, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(37, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(38, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(39, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(40, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(51, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(52, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(53, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(54, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(55, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(56, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(57, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(58, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(59, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
      "[div(sub(add(60, variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]"
    ]
  },
  "resources": [
    {
      "name": "mongo-nodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]",
        "[concat('Microsoft.Resources/deployments/', 'aerospike-nodes')]",
        "[concat('Microsoft.Resources/deployments/', 'cassa-nodes')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('machineTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmSize":{
            "value": "[parameters('vmSizeMongoNodes')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountNameShared')]"
          },
          "namespace": {
            "value": "cai-mongo"
          },
          "ip": {
            "value": "[variables('mongo_ip')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "subnet": {
            "value": "[variables('networkSettings').subnet.master]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          }
        }
      }
    },
    {
      "name": "aerospike-nodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('machineTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmSize":{
            "value": "[parameters('vmSizeAerospikeNodes')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountNameShared')]"
          },
          "namespace": {
            "value": "cai-aerospike"
          },
          "ip": {
            "value": "[variables('aerospike_ip')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "subnet": {
            "value": "[variables('networkSettings').subnet.master]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          }
        }
      }
    },
    {
      "name": "worker-nodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]"
//        ,"[concat('Microsoft.Resources/deployments/', 'mongo-nodes')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('machineTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmSize":{
            "value": "[parameters('vmSizeWorkerNodes')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountNameShared')]"
          },
          "namespace": {
            "value": "cai-worker"
          },
          "ip": {
            "value": "[variables('worker_ip')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "subnet": {
            "value": "[variables('networkSettings').subnet.master]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          }
        }
      }
    },
    {
      "name": "cassa-nodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('machineTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmSize":{
            "value": "[parameters('vmSizeCassaNodes')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountNameShared')]"
          },
          "namespace": {
            "value": "cai-cassa"
          },
          "ip": {
            "value": "[variables('cassa_ip')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "subnet": {
            "value": "[variables('networkSettings').subnet.master]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          }
        }
      }
    },
    {
      "name": "cruncher-nodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]"
//        ,"[concat('Microsoft.Resources/deployments/', 'mongo-nodes')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('machineTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmSize":{
            "value": "[parameters('vmSizeCruncherNodes')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountNameShared')]"
          },
          "namespace": {
            "value": "cai-cruncher"
          },
          "ip": {
            "value": "[variables('cruncher_ip')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "subnet": {
            "value": "[variables('networkSettings').subnet.master]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          }
        }
      }
    },
    {
      "name": "shared",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sharedTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountNameShared')]"
          }
        }
      }
    }
  ]
}
