{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username used when provisioning virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password used when provisioning virtual machines"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Existing Storage Account where the Virtual Machine's disks will be placed"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "subnet": {
      "type": "object",
      "metadata": {
        "description": "The name of the subnet to deploy resources into"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Basic_A0",
      "metadata": {
        "description": "Size of the Crawler nodes"
      }
    },
    "vmCount": {
      "type": "int",
      "defaultValue": 10,
      "metadata": {
        "description": "Number of Crawler nodes"
      }
    },
    "osSettings": {
      "type": "object",
      "metadata": {
        "description": "OS settings to deploy on"
      }
    },
    "namespace": {
      "type": "string",
      "metadata": {
        "description": "The namespace for resources created by this template"
      }
    }
  },
  "variables": {
    "vmStorageAccountContainerName": "vhd",
    "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnet').vnet), '/subnets/', parameters('subnet').name)]",
    "vmName": "[concat(parameters('namespace'), '-vm')]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('namespace'), '-nic-', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "[concat(parameters('namespace'),'nicLoop')]",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('namespace'), '-vm-', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "[concat(parameters('namespace'), 'virtualMachineLoop')]",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('namespace'), '-nic-', copyindex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('namespace'), '-vm-', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('storageAccountName'),'.blob.core.windows.net/vhds/', variables('vmName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('namespace'),'-nic-', copyindex()))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('namespace'),'-vm-', copyindex(), '/installcrawler')]",
          "apiVersion": "2015-06-15",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('namespace'), '-vm-', copyindex())]"
          ],
          "properties": "[parameters('osSettings').extensionSettings.crawler]"
        }
      ]
    }
  ]
}